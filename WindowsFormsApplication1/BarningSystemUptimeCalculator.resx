<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AooooA//2Q==
</value>
  </data>
</root>